@model Models.ViewModels.AdminWorker

@{
    ViewBag.Title = "AddWorker";
}


<div class="row" style="margin-right: 15px">
    <div class="col-md-12 custom-center-panel" style="margin-left: 15px">
        @Html.Partial("AdminMenu")
        <h4>Dodaj pracownika</h4>
@if (!ViewData.ModelState.IsValid)
{
    <div class="row" style="padding: 10px">
        <div class="panel panel-danger">
            <button type="button" class="close" data-dismiss="alert" style="margin-right:5px; margin-top: 5px">×</button>
            <div class="panel-heading">
                Błąd
            </div>
            <div class="panel-body">
                @Html.ValidationSummary()
            </div>
        </div>
    </div>
}
        @using (Html.BeginForm("AddWorker", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-md-6">
                    <div class="form-group-sm row">
                        <div class="control-label col-md-2" style="font-size: small">
                            Imię
                        </div>
                        <div class="col-md-10 has-feedback" style="margin-bottom: 3px">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @style = "max-width: none" + ((ViewData.ModelState.ContainsKey("FirstName") && ViewData.ModelState["FirstName"].Errors.Count > 0) ? ";border: 2px solid red" : "") } })
                            <span class="glyphicon-small glyphicon-asterisk form-control-feedback" aria-hidden="true" style="color: red"></span>
                        </div>
                    </div>

                    <div class="form-group-sm row">
                        <div class="control-label col-md-2" style="font-size: small">
                            Nazwisko
                        </div>
                        <div class="col-md-10 has-feedback" style="margin-bottom: 3px">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @style = "max-width: none" + ((ViewData.ModelState.ContainsKey("LastName") && ViewData.ModelState["LastName"].Errors.Count > 0) ? ";border: 2px solid red" : "") } })
                            <span class="glyphicon-small glyphicon-asterisk form-control-feedback" aria-hidden="true" style="color: red"></span>
                        </div>
                    </div>

                    <div class="form-group-sm row">
                        <div class="control-label col-md-2" style="font-size: small">
                            Tel. 1)
                        </div>
                        <div class="col-md-10 has-feedback" style="margin-bottom: 3px">
                            @Html.EditorFor(model => model.PhoneFirst, new { htmlAttributes = new { @class = "form-control", @style = "max-width: none" + ((ViewData.ModelState.ContainsKey("PhoneFirst") && ViewData.ModelState["PhoneFirst"].Errors.Count > 0) ? ";border: 2px solid red" : "") } })
                            <span class="glyphicon-small glyphicon-asterisk form-control-feedback" aria-hidden="true" style="color: red"></span>
                        </div>
                    </div>

                    <div class="form-group-sm row">
                        <div class="control-label col-md-2" style="font-size: small">
                            Tel. 2)
                        </div>
                        <div class="col-md-10" style="margin-bottom: 3px">
                            @Html.EditorFor(model => model.PhoneSecond, new { htmlAttributes = new { @class = "form-control", @style = "max-width: none" + ((ViewData.ModelState.ContainsKey("PhoneSecond") && ViewData.ModelState["PhoneSecond"].Errors.Count > 0) ? ";border: 2px solid red" : "") } })
                        </div>
                    </div>

                    <div class="form-group-sm row">
                        <div class="control-label col-md-2" style="font-size: small">
                            Email
                        </div>
                        <div class="col-md-10 has-feedback" style="margin-bottom: 3px">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @style = "max-width: none" + ((ViewData.ModelState.ContainsKey("Email") && ViewData.ModelState["Email"].Errors.Count > 0) ? ";border: 2px solid red" : "") } })
                            <span class="glyphicon-small glyphicon-asterisk form-control-feedback" aria-hidden="true" style="color: red"></span>
                        </div>
                    </div>
                    <div class="form-group-sm row">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Dodaj" class="btn btn-sm btn-primary" />
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group-sm">
                        <div class="control-label col-md-2">
                            Zdjęcie:
                        </div>
                        <div class="col-md-10" style="margin-bottom: 3px">
                            <div class="row">
                                <div class="col-md-12">
                                    <input type="file" class="form-control" id="Photo" name="Photo" style="max-width: none" accept="image/*" />
                                </div>
                            </div>
                            <div class="row" style="color: rgb(74, 0, 0)">
                                <div class="col-md-12">
                                    <div class="col-md-8" style="font-size:10px">
                                       Akceptowane pliki: jpg, png, gif, bnp
                                    </div>
                                    <div class="col-md-4" style="text-align:right; font-size:10px">
                                        Max 5MB
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<div class="row">
    <div class="col-md-12">

        <div class="col-md-6 col-md-push-6">
            <div class="col-md-12" style="text-align:right">
                @Html.ActionLink("Wróć do listy", "Workers")
            </div>
        </div>

    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.js"></script>

<script type="text/javascript">
    $("#Photo").on("change", function() {
        var size = $(this)[0].files[0].size;
        if ((size / 1024 / 1024) > 5) {
            alert("Plik jest za duży. Wybierz inne zdjęcie!");
            $(this)[0].value = "";
        } 
    })
</script>
