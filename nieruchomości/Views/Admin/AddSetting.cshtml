@using Models.EntityModels

@model Models.ViewModels.AddSettingViewModel

@{
    ViewBag.Title = "AddSettings";
}

<div class="row" style="margin-right: 15px">
    <div class="col-md-12 custom-center-panel" style="margin-left: 15px">
        @Html.Partial("AdminMenu")

        @if (@Model.CompartmentsList.Count == 0)
        {
            @Html.Label("Nie ma mozliwosci wprowadzenia danych, postepuj wg instrukcji.")

        }
        else
        {

            <h4>Przedzialy puste do wprowadzenia</h4>
            
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>
                            Od
                        </th>
                        <th>
                            Do
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var x in Model.CompartmentsList)
                    {
                        <tr>
                            <td>
                                @Html.Label("przedzial:          ")
                                </td>
                            <td>
                                @Html.TextBox("From", x.From, new { style = "max-width: 100px;" })
                            </td>

                            <td>
                                @Html.TextBox("Percent", x.To, new { style = "max-width: 100px;" })
                            </td>
                        </tr>
                    }
               </tbody>
            </table>
        }

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Dodaj przedział taksy notarialnej</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.Label("Od", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Clat.From, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Clat.From, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Do", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Clat.To, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Clat.To, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Procent", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Clat.Percent, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Clat.Percent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Maksymalnie", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Clat.Max, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Clat.Max, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Kwota", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Clat.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Clat.Price, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Utwórz" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Powrót", "Settings")
        </div>
    </div>
</div>
