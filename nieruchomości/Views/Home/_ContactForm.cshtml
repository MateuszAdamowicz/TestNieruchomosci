@model Models.ContactEmail

@if (!ViewData.ModelState.IsValid)
{
    <div class="row" style="padding: 10px">
        <div class="alert alert-dismissable alert-danger">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <strong>Błąd</strong> @Html.ValidationSummary()
            @{
    var errors = ViewData.ModelState.Values.Count(x => x.Errors.Count > 0);
    var all = ViewData.ModelState.Keys.Count;

    var errors_p = (int)(((float)errors / (float)all) * 100);

            }
            <div class="progress progress-striped active" style="background-color:#e74c3c">
                <div class="progress-bar progress-bar-success" style="width: @(100-errors_p)%"></div>
                <div class="progress-bar progress-bar-danger" style="width: @(errors_p)%"></div>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("Show", "Home", new { key = ViewContext.ViewData.ModelState["key"].Value.AttemptedValue}, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-group-sm">
        <div class="row" style="margin-bottom:5px">
            <div class="col-md-4">
                <sup><b style="font-size: 14px; color:red">*</b></sup><small>Imię i Nazwisko:</small>
            </div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @style = "max-width: none" } })
            </div>
        </div>

        <div class="row" style="margin-bottom:5px">
            <div class="col-md-4">
                <sup><b style="font-size: 14px; color: red">*</b></sup><small>Email:</small>
            </div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @style = "max-width: none" } })
            </div>
        </div>

        <div class="row" style="margin-bottom: 5px">
            <div class="col-md-4">
                <small>Telefon:</small>
            </div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.PhoneNumber, new {htmlAttributes = new {@class = "form-control", @style = "max-width: none"}})
            </div>
        </div>
        <div class="row" style="margin-bottom: 5px">
            <div class="col-md-4">
                <sup><b style="font-size: 14px; color: red">*</b></sup><small>Wiadomość:</small>
            </div>
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.Body, new {@class = "form-control", @style = "max-width: none; height:100px"})
            </div>
        </div>
        <div class="row">
            <input type="hidden" name="OfferLink" value="@Request.RawUrl"/>
        </div>
        <div class="row">
            <div class="col-md-8 pull-right" style="text-align: center">
                <button type="submit" class="btn btn-sm btn-primary" style="width: 100%">Wyślij</button>
            </div>
            <div class="col-md-8" style="color:red">
                <small>Pola oznaczone gwiazdką są wymagane!</small>
            </div>
        </div>
    </div>
}
